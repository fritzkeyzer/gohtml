// Code generated by gohtml. DO NOT EDIT

//go:build !ignore_autogenerated

package tests

import (
	"bytes"
	"html/template"
	"io"
	"net/http"
)

// --- START TEMPLATE: Basic

var rawBasicTemplate =
// language=gotemplate
`<h1>Hello {{.Name}}</h1>
<footer>Today's date is {{.Date}}</footer>
`

var BasicTemplate = template.Must(template.New("Basic").Parse(rawBasicTemplate))

type BasicData struct {
	Name any
	Date any
}

// Basic renders the "Basic" template as an HTML fragment
func Basic(data BasicData) template.HTML {
	buf := new(bytes.Buffer)
	err := RenderBasic(buf, data)
	if err != nil {
		panic(err)
	}

	return template.HTML(buf.String())
}

// RenderBasic renders the "Basic" template to the specified writer.
// If the writer is of the type http.ResponseWriter - the content-type header is set to "text/html; charset=utf-8"
func RenderBasic(w io.Writer, data BasicData) error {
	if hw, ok := w.(http.ResponseWriter); ok {
		hw.Header().Set("Content-Type", "text/html; charset=utf-8")
	}

	tmpl := BasicTemplate
	if LiveReload {
		var err error
		tmpl, err = template.ParseFiles("example/template/conditional.gohtml")
		if err != nil {
			return err
		}
	}

	return tmpl.Execute(w, data)
}

// --- END TEMPLATE: Basic
