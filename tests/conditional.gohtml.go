// Code generated by gohtml. DO NOT EDIT

//go:build !ignore_autogenerated

package tests

import (
	"bytes"
	"html/template"
	"io"
	"net/http"
)

// --- START TEMPLATE: Conditional

var rawConditionalTemplate =
// language=gotemplate
`<button>
    {{if .SignedIn}}
        Sign Out
    {{end}}
</button>
`

var ConditionalTemplate = template.Must(template.New("Conditional").Parse(rawConditionalTemplate))

type ConditionalData struct {
	SignedIn any
}

// Conditional renders the "Conditional" template as an HTML fragment
func Conditional(data ConditionalData) template.HTML {
	buf := new(bytes.Buffer)
	err := RenderConditional(buf, data)
	if err != nil {
		panic(err)
	}

	return template.HTML(buf.String())
}

// RenderConditional renders the "Conditional" template to the specified writer.
// If the writer is of the type http.ResponseWriter - the content-type header is set to "text/html; charset=utf-8"
func RenderConditional(w io.Writer, data ConditionalData) error {
	if hw, ok := w.(http.ResponseWriter); ok {
		hw.Header().Set("Content-Type", "text/html; charset=utf-8")
	}

	tmpl := ConditionalTemplate
	if LiveReload {
		var err error
		tmpl, err = template.ParseFiles("example/template/conditional.gohtml")
		if err != nil {
			return err
		}
	}

	return tmpl.Execute(w, data)
}

// --- END TEMPLATE: Conditional
